---
const { href, onClick, onDarkBG = false } = Astro.props;

// TODO: use onDarkBG to set a class that will allow the button/link to show on dark backgrounds
---

{
  href && (
    <a class="button-link" href={href}>
      <slot />
    </a>
  )
}

{
  !href && onClick && (
    <button>
      <slot />
    </button>
  )
}

<style>
  a.button-link,
  button {
    -moz-box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.4);
    -webkit-box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.4);
    align-items: center;
    background-color: green;
    border-radius: 15px;
    border: none;
    box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.4);
    color: white;
    display: inline-flex;
    font-size: 14px;
    font-weight: 400;
    margin: 0;
    min-height: 44px;
    min-width: 44px;
    padding: 10px 20px;
    text-decoration: none;
    text-transform: capitalize;
    transition: 150ms all ease-in-out;
  }

  a.button-link:hover,
  button:hover,
  a.button-link:focus,
  button:focus {
    -moz-box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.6);
    -webkit-box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.6);
    background-color: darkgreen;
    box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.6);
  }

  a.button-link:active,
  button:active {
    -moz-box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.6);
    -webkit-box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.6);
    background-color: darkgreen;
    box-shadow: 1px 15px 27px -17px rgba(0, 0, 0, 0.6);
    transform: scale(0.98);
  }
</style>
